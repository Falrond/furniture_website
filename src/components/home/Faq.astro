---
const features = [
  {
    id: "expertise-1",
    name: "Digital Experience Platforms",
    description:
      "Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.",
  },
  {
    id: "expertise-2",
    name: "Web & Mobile Development",
    description:
      "Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.",
  },
  {
    id: "expertise-3",
    name: "Serverless Computing Platforms",
    description:
      "Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.",
  },
  {
    id: "expertise-4",
    name: "Build & Test Automation Tools",
    description:
      "Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.",
  },
  {
    id: "expertise-5",
    name: "Artificial Intelligence",
    description:
      "Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.",
  },
  {
    id: "expertise-6",
    name: "Full project support",
    description:
      "Lorem ipsum, dolor sit amet consectetur adipisicing elit. Maiores impedit perferendis suscipit eaque, iste dolor cupiditate blanditiis ratione.",
  },
];
---

<section class="py-16 sm:py-20">
  <div class="mx-auto max-w-2xl px-4 sm:px-6 lg:max-w-7xl lg:px-8">
    <div class="grid gap-12 lg:grid-cols-3 lg:gap-8">
      <h2 class="text-3xl font-medium tracking-tight sm:text-4xl">Expertise</h2>
      <div class="lg:col-span-2">
        <dl
          class="-mt-3"
          x-data="{ selected: null, toggle(value) { this.selected = this.selected === value ? null : value } }"
        >
          {
            features.map((feature, index) => (
              <div
                class="rounded-3xl px-4 transition"
                x-data={`{ id: ${index}, get isOpen() { return this.id === this.selected }, get isNextOpen() { return (this.id + 1) === this.selected } }`}
                x-bind:class="{ 'bg-primary-500/10 dark:bg-primary-400/10': isOpen }"
              >
                <dt
                  class="border-b text-lg transition"
                  x-cloak
                  x-bind:class="{ 'border-transparent': isOpen || isNextOpen, 'border-primary-900/10 dark:border-primary-300/10': !(isOpen || isNextOpen) }"
                >
                  <button
                    type="button"
                    class="group block w-full py-6 text-left transition focus-visible:outline-none"
                    aria-controls={feature.id}
                    x-on:click="toggle(id)"
                    aria-expanded="false"
                    x-bind:aria-expanded="isOpen.toString()"
                  >
                    <div class="group-focus-visible:outline-primary-950 dark:group-focus-visible:outline-primary-200 flex items-center justify-between rounded-3xl group-focus-visible:outline group-focus-visible:outline-2 group-focus-visible:outline-offset-2">
                      <span class="font-medium">{feature.name}</span>
                      <span class="ml-6 flex h-7 items-center">
                        <svg
                          class="text-primary-600 dark:text-primary-400 h-6 w-6 rotate-0 transform transition duration-200 ease-in-out"
                          x-bind:class="{ '-rotate-180': isOpen, 'rotate-0': !isOpen }"
                          xmlns="http://www.w3.org/2000/svg"
                          viewBox="0 0 24 24"
                          fill="currentColor"
                          aria-hidden="true"
                        >
                          <path d="M11.9997 13.1714L16.9495 8.22168L18.3637 9.63589L11.9997 15.9999L5.63574 9.63589L7.04996 8.22168L11.9997 13.1714Z" />
                        </svg>
                      </span>
                    </div>
                  </button>
                </dt>
                <div
                  class="pb-6 pr-6"
                  id={feature.id}
                  x-show="isOpen"
                  x-cloak
                  x-collapse
                >
                  <p class="text-primary-950/70 dark:text-primary-200/70 text-base">
                    {feature.description}
                  </p>
                </div>
              </div>
            ))
          }
        </dl>
      </div>
    </div>
  </div>
</section>

<div class="h-screen w-screen flex justify-center">
  <div class="mr-8">
    <h1 class="font-medium max-w-xl mx-auto pt-10 pb-4">Smooth Accordion</h1>
    <div
      class="max-w-xl mx-auto border border-gray-200"
      x-data="{selected:null}"
    >
      <ul class="shadow-box">
        <li class="relative border-b border-gray-200">
          <button
            type="button"
            class="w-full px-8 py-6 text-left"
            @click="selected !== 1 ? selected = 1 : selected = null"
          >
            <div class="flex items-center justify-between">
              <span> Should I use reCAPTCHA v2 or v3? </span>
              <span class="ico-plus"></span>
            </div>
          </button>

          <div
            class="relative overflow-hidden transition-all max-h-0 duration-700"
            style=""
            x-ref="container1"
            x-bind:style="selected == 1 ? 'max-height: ' + $refs.container1.scrollHeight + 'px' : ''"
          >
            <div class="p-6">
              <p>
                reCAPTCHA v2 is not going away! We will continue to fully
                support and improve security and usability for v2.
              </p>
              <p>
                reCAPTCHA v3 is intended for power users, site owners that want
                more data about their traffic, and for use cases in which it is
                not appropriate to show a challenge to the user.
              </p>
              <p>
                For example, a registration page might still use reCAPTCHA v2
                for a higher-friction challenge, whereas more common actions
                like sign-in, searches, comments, or voting might use reCAPTCHA
                v3. To see more details, see the reCAPTCHA v3 developer guide.
              </p>
            </div>
          </div>
        </li>

        <li class="relative border-b border-gray-200">
          <button
            type="button"
            class="w-full px-8 py-6 text-left"
            @click="selected !== 2 ? selected = 2 : selected = null"
          >
            <div class="flex items-center justify-between">
              <span>
                I'd like to run automated tests with reCAPTCHA. What should I
                do?
              </span>
              <span class="ico-plus"></span>
            </div>
          </button>

          <div
            class="relative overflow-hidden transition-all max-h-0 duration-700"
            style=""
            x-ref="container2"
            x-bind:style="selected == 2 ? 'max-height: ' + $refs.container2.scrollHeight + 'px' : ''"
          >
            <div class="p-6">
              <p>
                For reCAPTCHA v3, create a separate key for testing
                environments. Scores may not be accurate as reCAPTCHA v3 relies
                on seeing real traffic.
              </p>
              <p>
                For reCAPTCHA v2, use the following test keys. You will always
                get No CAPTCHA and all verification requests will pass.
              </p>
            </div>
          </div>
        </li>

        <li class="relative border-b border-gray-200">
          <button
            type="button"
            class="w-full px-8 py-6 text-left"
            @click="selected !== 3 ? selected = 3 : selected = null"
          >
            <div class="flex items-center justify-between">
              <span> Can I run reCAPTCHA v2 and v3 on the same page? </span>
              <span class="ico-plus"></span>
            </div>
          </button>

          <div
            class="relative overflow-hidden transition-all max-h-0 duration-700"
            style=""
            x-ref="container3"
            x-bind:style="selected == 3 ? 'max-height: ' + $refs.container3.scrollHeight + 'px' : ''"
          >
            <div class="p-6">
              <p>
                To do this, load the v3 site key as documented, and then
                explicitly render v2 using grecaptcha.render.
              </p>
              <p>
                You are allowed to hide the badge as long as you include the
                reCAPTCHA branding visibly in the user flow. Please include the
                following text:
              </p>
              <p>
                Yes, please use "www.recaptcha.net" in your code in
                circumstances when "www.google.com" is not accessible.
              </p>
              <ul>
                <li>
                  First, replace &lt;script
                  src="https://www.google.com/recaptcha/api.js" async
                  defer&gt;&lt;/script&gt; with &lt;script
                  src="https://www.recaptcha.net/recaptcha/api.js" async
                  defer&gt;&lt;/script&gt;
                </li>
                <li>
                  After that, apply the same to everywhere else that uses
                  "www.google.com/recaptcha/" on your site.
                </li>
              </ul>
              <p>
                After that, apply the same to everywhere else that uses
                "www.google.com/recaptcha/" on your site.
              </p>
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>

<style>
  .max-h-0 {
    max-height: 0;
  }
</style>
